########## ZSHRC ##########
######## DavyJ0nes ########

#### ZSH Config ####
export ZSH=$HOME/.oh-my-zsh
export LANG=en_US.UTF-8
export LC_ALL="en_US.UTF-8"

ZSH_THEME="avit"
plugins=(git docker docker-compose golang gradle cargo brew kubectl terraform)

#### PATH export ####
export GOPATH=$HOME/go
export PATH="/sbin:/usr/local/bin:$HOME/bin:/usr/sbin:/bin:/usr/bin:/usr/local/games:/usr/games:/usr/local/go/bin:$GOPATH/bin"
export PATH="/opt/chefdk/bin:$PATH"
export PATH="$HOME/Library/Python/2.7/bin:$PATH"
export PATH="$HOME/Library/Python/3.6/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/bin/pact/bin:$PATH"
export PATH="/usr/X11/bin:$PATH"
export TERM="xterm-256color"

# Python version with pyenv
# eval "$(pyenv init -)"

# Ruby version with rbenv
# eval "$(rbenv init -)"

# Set up Docker on older Macbook
# eval $(docker-machine env)

#### Custom env exports ####
export EDITOR='vim'

#### GPG Stuff ####
export GPG_TTY=$(tty)

#### Other scripts to source ####
source $ZSH/oh-my-zsh.sh
source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# GCLOUD related stuff
source $HOME/google-cloud-sdk/completion.zsh.inc
source $HOME/google-cloud-sdk/path.zsh.inc

# Kubectl and Helm completion
source <(kubectl completion zsh)
source <(helm completion zsh)
source <(jira --completion-script-zsh)

# Rust related
source $HOME/.cargo/env

# GO11 Modules Enable
export GO111MODULE=on 

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                    # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# izettle
export AWSLOGIN_CRED_DURATION=28800 # 8 hours

#### Aliases ####
alias sudo="sudo "
alias watch="watch "
alias vi="vim"
alias cp="cp -iv"
alias rm="rmtrash"
alias mv="mv -iv"
alias ls="ls -FGh"
alias l="ls -al"
alias du="du -cksh"
alias df="df -h"
alias sed="gsed"
alias rgrep="grep -r"
alias pse='ps -eo pid,ppid,pcpu,args'
alias pingg="ping 8.8.8.8"
alias here="pwd | pbcopy"
alias grepip="grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
alias tree="tree -L 4"
alias jq="jq -C"
alias less="less -r"
alias brew-upgrade="brew update && brew upgrade && brew cleanup"
alias topcmds="history | awk '{CMD[\$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | grep -v \"./\" | column -c3 -s \" \" -t | sort -nr | nl |  head -n10"

# git
alias gitdock="docker run -v "$PWD":/srv/app davyj0nes/git"
alias gst="git status"
alias gl="git log"
alias gaf='git add -A; git commit -m "WIP: $(w3m whatthecommit.com | head -n 1)"'
alias git-branch-name="git rev-parse --abbrev-ref HEAD"
alias ghstatus="curl -s https://www.githubstatus.com/api/v2/status.json | jq "
alias prdesign="hub pull-request -l 'Technical Design' -a DavyJ0nes -b master"
alias prdebt="hub pull-request -l 'Technical Debt' -a DavyJ0nes -b master"

# Ansible
alias a="ansible -i hosts"
alias play="ansible-playbook"

# Docker
alias dm="docker-machine"
alias dps="docker ps"
alias drm="docker rm"
alias dkill="docker kill"
alias dco="docker-compose"
alias dockernotary="notary -s https://notary.docker.io -d ~/.docker/trust"
alias pgport="jq '.[0].NetworkSettings.Ports.\"5432/tcp\"[0].HostPort' | tr -d '\"'"
alias ctop="docker run --rm -ti -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest"

# Golang
alias godavy="cd $GOPATH/src/github.com/davyj0nes"
alias gozettle="cd $GOPATH/src/github.com/iZettle"
alias goresetdeps="rm Gopkg.lock && rm vendor/ && dep ensure"
export GOPRIVATE=github.com/iZettle/*

# Kubenetes
alias kb="kubectl"
alias k="kubectl"
alias mk="minikube"

# Terraform
alias tf="terraform"

# Packer
alias pack="packer"

# PHP
alias php="docker run -t --rm php"
alias pecl="docker run -t --rm php pecl"

# Helpers
alias getip="wget http://ipinfo.io/ip -qO -"
alias showtodo="grep -R TODO * --exclude-dir=vendor"
alias uuidgen="uuidgen | tr '[:upper:]' '[:lower:]' | tr -d '\n'"
alias gimmidate='date +"%Y-%m-%d %H:%M:%S" | tr -d "\n" | pbcopy'
alias gimmiuuid="uuidgen | pbcopy"

# AWS
alias awspersonal="aws --profile personal --region eu-west-1"

# Weather
alias weather="docker run davyj0nes/weather:0.0.4"

#### Custom Functions ####
# Docker related commands
function da() {
  docker start $1 && docker attach $1
}

function dockerstart() {
  docker-machine stop
  docker-machine start
  eval $(docker-machine env)
}

function dclean() {
  docker container prune -f
  docker image prune -f
  docker volume prune -f
}

# Misc commands that don't warrant being in ~/bin
function rant() {
  echo $1 > /dev/null
  echo "Rant over, go for a walk!"
}

function note() {
  echo "$1 \n" >> ~/.notes
}

function iperfsummary() {
  if [ "$1" = "" ]; then
    echo "server address not set"
    return 1
  fi
  iperf3 -c "$1" -J | jq '.end | {received: .sum_received.bits_per_second, sent: .sum_sent.bits_per_second}'
}

# check if uri is up
function isup() {
	local uri=$1

	if curl -s --head  --request GET "$uri" | grep "200 OK" > /dev/null ; then
		notify-send --urgency=critical "$uri is down"
	else
		notify-send --urgency=low "$uri is up"
	fi
}

# Get colors in manual pages
function man() {
	env \
		LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
		LESS_TERMCAP_md="$(printf '\e[1;31m')" \
		LESS_TERMCAP_me="$(printf '\e[0m')" \
		LESS_TERMCAP_se="$(printf '\e[0m')" \
		LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
		LESS_TERMCAP_ue="$(printf '\e[0m')" \
		LESS_TERMCAP_us="$(printf '\e[1;32m')" \
		man "$@"
}

# Run `dig` and display the most useful info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

# Simple calculator
function calc() {
	# local result=""
	result="$(printf "scale=10;%s\\n" "$*" | bc --mathlib | tr -d '\\\n')"
	#						└─ default (when `--mathlib` is used) is 20

	if [[ "$result" == *.* ]]; then
		# improve the output for decimal numbers
		# add "0" for cases like ".5"
		# add "0" for cases like "-.5"
		# remove trailing zeros
		printf "%s" "$result" |
			sed -e 's/^\./0./'  \
			-e 's/^-\./-0./' \
			-e 's/0*$//;s/\.$//'
	else
		printf "%s" "$result"
	fi
	printf "\\n"
}

function kbgetall() {
  if [ "$1" != "" ]; then
    NS="-n $1"
  else
    NS="--all-namespaces"
  fi

  echo "PODS" && echo "----"
  kubectl get pods "$NS"
  echo "\nSERVICES" && echo "--------"
  kubectl get svc "$NS"
  echo "\nDEPLOYMENTS" && echo "---------"
  kubectl get deployments "$NS"
  echo "\nINGRESS" && echo "-------"
  kubectl get ingress "$NS"
  echo "\nJOBS" && echo "-------"
  kubectl get jobs "$NS"
}

function gpob() {
  git push origin $(git rev-parse --abbrev-ref HEAD)
}

function check-helm-values() {
  grep -A 5 "\- name: $1" dev.yml stg.yml minikube.yml prd.yml
}

function whoseport() {
  lsof -i ":$1" | grep LISTEN
}

function apidocs() {
  awk '/tests :=/,/^$/' $1 | tail -n +9 | tr -d '\t' | sed -E -e 's/^},|^{|^}//'
}

function gocheckshit() {
  echo -e "\e[33mrunning linter...\e[0m"
  golangci-lint run --no-config --deadline=30m -E gosec -E goimports -E goconst

  echo -e "\e[33mrunning tests...\e[0m"
  go test -race ./...
}

function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}

# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/davy.jones/.sdkman"
[[ -s "/Users/davy.jones/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/davy.jones/.sdkman/bin/sdkman-init.sh"
