#!/bin/bash

###
# Davy Jones June 2015
# Really janky script that checks predefined IPs from
# local interface to full DNS address resolution and 
# simply reports status with colour.
#
# NEEDS REFACTORING!!!!!
###

## COLOUR VARS
black() { echo -e "$(tput setaf 0)$*$(tput setaf 9)"; }
red() { echo -e "$(tput setaf 1)$*$(tput setaf 9)"; }
green() { echo -e "$(tput setaf 2)$*$(tput setaf 9)"; }
yellow() { echo -e "$(tput setaf 3)$*$(tput setaf 9)"; }
blue() { echo -e "$(tput setaf 4)$*$(tput setaf 9)"; }
magenta() { echo -e "$(tput setaf 5)$*$(tput setaf 9)"; }
cyan() { echo -e "$(tput setaf 6)$*$(tput setaf 9)"; }
white() { echo -e "$(tput setaf 7)$*$(tput setaf 9)"; }

## ROUTE VARS
DEFAULT_ROUTE=$(netstat -nr -f inet | grep default | awk '{print $2}')
DEFAULT_IFACE=$(netstat -nr -f inet | grep default | awk '{print $NF}')
LOCAL_IP=$(ifconfig | grep "$DEFAULT_IFACE" -A 5 | grep -oe "inet [0-9]\\{1,3\\}.[0-9]\\{1,3\\}.[0-9]\\{1,3\\}.[0-9]\\{1,3\\}" | tr -d "inet ")

## PING COMMAND VARS
LOCAL="ping -c 1 -t 2 $LOCAL_IP"
GW="ping -c 1 -t 2 $DEFAULT_ROUTE"
INET="ping -c 1 -t 2 1.1.1.1"
DNS="ping -c 1 -t 2 google.com"

## CHECK LOCAL CONNECTION
if [ "$LOCAL_IP" == "127.0.0.1" ]; then
  red "NIC: \\t\\t ERROR"
else
  if $LOCAL >> /dev/null 2>&1; then
    green "NIC:\\t\\t OK"
  else
    red "NIC:\\t\\t ERROR"
  fi
fi

## CHECK DEFAULT GATEWAY
if $GW >> /dev/null 2>&1; then
    green "INTERNET GW:\\t OK"
  else
    red "INTERNET GW:\\t ERROR"
fi

if $INET >> /dev/null 2>&1; then
    green "DNS SERVER:\\t OK"
  else
    red "DNS SERVER:\\t ERROR"
fi

if $DNS >> /dev/null 2>&1; then
    green "GOOGLE.COM:\\t OK"
  else
    red "GOOGLE.COM:\\t ERROR"
fi
