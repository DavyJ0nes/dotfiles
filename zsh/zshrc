########## ZSHRC ##########
######## DavyJ0nes ########

#### ZSH Config ####
export ZSH=$HOME/.oh-my-zsh
export LC_ALL="en_US.UTF-8"
ZSH_THEME="miloshadzic"
plugins=(git zsh-syntax-highlighting docker docker-compose golang kubectl terraform)

#### PATH export ####
export GOPATH=$HOME/go
export PATH="/sbin:/usr/local/bin:$HOME/bin:/usr/sbin:/bin:/usr/bin:/usr/local/games:/usr/games:/usr/local/go/bin:$GOPATH/bin"
export PATH="/opt/chefdk/bin:$PATH"
export PATH="$HOME/Library/Python/2.7/bin:$PATH"
export PATH="$HOME/Library/Python/3.6/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="/usr/X11/bin:$PATH"
export TERM="xterm-256color"

# Python version with pyenv
eval "$(pyenv init -)"

# Ruby version with rbenv
eval "$(rbenv init -)"

# Set up Docker on older Macbook
eval $(docker-machine env)

#### Custom env exports ####
export EDITOR='vim'

#### Other scripts to source ####
source $ZSH/oh-my-zsh.sh
# source ~/.tmux/tmuxinator.zsh

# GCLOUD related stuff
source $HOME/.google-cloud-sdk/completion.zsh.inc
source $HOME/.google-cloud-sdk/path.zsh.inc
# Kubectl completion
source <(kubectl completion zsh)

#### Aliases ####
alias vi="vim"
alias cp="cp -iv"
alias rm="rm -iv"
alias mv="mv -iv"
alias ls="ls -FGh"
alias l="ls -al"
alias du="du -cksh"
alias df="df -h"
alias gsed="sed"
alias rgrep="grep -r"
alias pse='ps -eo pid,ppid,pcpu,args'
alias pingg="ping 8.8.8.8"
alias here="pwd | pbcopy"
alias grepip="grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
alias tree="tree -L 4"
alias jq="jq -C"
alias less="less -r"
alias brew-upgrade="brew update && brew upgrade $(brew outdated --quiet) && brew cleanup"
# Have these 2 set as was seeing issue with terminal freezing with High Sierra!
alias htop="top"
alias glances="top"
alias topcmds="history | awk '{CMD[\$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | grep -v \"./\" | column -c3 -s \" \" -t | sort -nr | nl |  head -n10"
# git
alias gitdock="docker run -v "$PWD":/srv/app davyj0nes/git"
alias gpom="git push origin $(gb | grep '^*' | sed 's/* //')"
alias gst="git status"
alias gl="git log"
# Ansible
alias a="ansible -i hosts"
alias play="ansible-playbook"
# Docker
alias dm="docker-machine"
alias dps="docker ps"
alias drm="docker rm"
alias dkill="docker kill"
alias dco="docker-compose"
alias dockernotary="notary -s https://notary.docker.io -d ~/.docker/trust"
# Golang
alias godavy="cd $GOPATH/src/github.com/davyj0nes"
# Kubenetes
alias kb="kubectl"
# Terraform
alias tf="terraform"
# Packer
alias pack="packer"
# Helpers
alias getip="wget http://ipinfo.io/ip -qO -"
# AWS
alias awspersonal="aws --profile personal --region eu-west-1"
# Weather
alias weather="docker run davyj0nes/weather"

#### Custom Functions ####
# Docker related commands
function da() {
  docker start $1 && docker attach $1
}

function dockerstart() {
  docker-machine stop
  docker-machine start
  eval $(docker-machine env)
}

function dclean() {
  docker container prune -f
  docker image prune -f
  docker volume prune -f
}

# Misc commands that don't warrant being in ~/bin
function rant() {
  echo $1 > /dev/null
  echo "Rant over, go for a walk!"
}

function note() {
  echo "$1 \n" >> ~/.notes
}

function iperfsummary() {
  if [ "$1" = "" ]; then
    echo "server address not set"
    return 1
  fi
  iperf3 -c "$1" -J | jq '.end | {received: .sum_received.bits_per_second, sent: .sum_sent.bits_per_second}'
}

# check if uri is up
function isup() {
	local uri=$1

	if curl -s --head  --request GET "$uri" | grep "200 OK" > /dev/null ; then
		notify-send --urgency=critical "$uri is down"
	else
		notify-send --urgency=low "$uri is up"
	fi
}

# Get colors in manual pages
function man() {
	env \
		LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
		LESS_TERMCAP_md="$(printf '\e[1;31m')" \
		LESS_TERMCAP_me="$(printf '\e[0m')" \
		LESS_TERMCAP_se="$(printf '\e[0m')" \
		LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
		LESS_TERMCAP_ue="$(printf '\e[0m')" \
		LESS_TERMCAP_us="$(printf '\e[1;32m')" \
		man "$@"
}

# Run `dig` and display the most useful info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

# Simple calculator
function calc() {
	# local result=""
	result="$(printf "scale=10;%s\\n" "$*" | bc --mathlib | tr -d '\\\n')"
	#						└─ default (when `--mathlib` is used) is 20

	if [[ "$result" == *.* ]]; then
		# improve the output for decimal numbers
		# add "0" for cases like ".5"
		# add "0" for cases like "-.5"
		# remove trailing zeros
		printf "%s" "$result" |
			sed -e 's/^\./0./'  \
			-e 's/^-\./-0./' \
			-e 's/0*$//;s/\.$//'
	else
		printf "%s" "$result"
	fi
	printf "\\n"
}
